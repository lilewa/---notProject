CREATE OR REPLACE Procedure PROC_DZBQ
(
 errno   Out Number,
 errtext Out Varchar) As
    v_zp t_zprw%Rowtype;
    v_allflowid number;
    v_one_sys  t_dfbj.zsy%Type;
    v_dj       t_kcsm.dj%Type;
    v_one_mys  t_dfbj.zmy%Type;
    v_bjlsh    number;
    v_bj       Number;
    v_cys    Number(9); --差异数
    d_jzthrq Date;
    flowid  Number(10);
    v_bccs   Number(10); -- 本次册数
    v_rows     Number;
    v_flowid number;
    v_rqh char(10);
    v_bz   varchar2(30);
    v_dm varchar2(60);
    v_jhzxid  varchar2(30);
    --v_czy t_user.usr_id%type;
    v_ysrqh char(10);
    v_czy varchar2(20);
Begin


    for cur in( select t.*,rowid rid from MIDORDERS t where STATE='3') loop

       if trim(cur.CONTAINERID) is null then
          update MIDORDERS set STATE='9' , ERRMSG ='CONTAINERID null' where rowid=cur.rid;
          continue;
       end if;

        v_rqh:=cur.CONTAINERID;
        v_ysrqh:=cur.orderid;
        
        if cur.truequantity is null then
          update MIDORDERS set STATE='9' , ERRMSG ='truequantity null' where rowid=cur.rid;
          continue;
        end if ;

        if cur.truequantity  < 0  then
          update MIDORDERS set STATE='9' , ERRMSG ='truequantity <0' where rowid=cur.rid;
          continue;
        end if ;

        if cur.truequantity  > cur.quantity  then
          update MIDORDERS set STATE='9' , ERRMSG='truequantity  >  quantity' where rowid=cur.rid;
          continue;
        end if ;

        
        v_bccs := cur.truequantity;
      --  v_cys  := cur.quantity- v_bccs;
       -- v_czy:= trim(cur.oprationcode);
       v_czy:='0001';
        Select * Into v_zp From t_zprw Where flowid_zp = cur.ID_ZPRW;
        if v_zp.yssl-v_zp.sjsl < v_bccs then
           update MIDORDERS set STATE='9' , ERRMSG='超量' where rowid=cur.rid;
          continue;
        end if ;


        If v_bccs > 0 Then

           --插入校核任务
          Select  min(id),min(jhzxid)    Into v_bjlsh,v_jhzxid   From t_jhtask
            Where rqh = v_rqh   and zt='0';
          if v_bjlsh is null then

             select sq_jhtask.nextval into v_flowid from  dual;
             v_bjlsh:=v_flowid;
             v_jhzxid:=v_zp.jhzxid;

             insert into t_jhtask
             (id, rqh, zt, createdate, ywbmbh, dh, zpz,
              zcs, zmy, zsy, ywlx,sjlx, jxfs, zzl, js, zddh, isgp,isgz,jhzxid)
             values
             (v_flowid, v_rqh, '0', sysdate, v_zp.ywbmbh, v_zp.dh,
              0, 0, 0, 0, 'FH','FH', 'ZP', 0, 1, v_zp.zddh,
              null,null,v_jhzxid);

              insert into t_rqzy
             (bh, zydate, czy, tbname, tableid, note,qx,zylx)
             select   v_rqh, sysdate, null, 't_jhtask',
             v_flowid,  trim(dm)||'的校核任务' ,'FHJH','s'  from
             t_dm where dh=v_zp.dh;


          else
            if v_jhzxid<> v_zp.jhzxid then
               update MIDORDERS set STATE='9' ,
                      ERRMSG='t_jhtask.jhzxid:' ||v_jhzxid||',t_zprw.jhzxid:'||v_zp.jhzxid
                where rowid=cur.rid;
               continue;
            end if ;
          end if ;


           insert into t_gzltimes
             (czybh,   cs, my, id_job, proc, tablename, tablepk,YWBM)
             values
             (v_czy, v_bccs, v_bccs*v_dj, 'ZPBZ', 'RF_RFBZ2', 't_zprw', v_zp.flowid_zp,v_zp.ywbmbh);

            update t_zprwhz set sjsl=sjsl+v_bccs,zpczy=v_czy,zt='1'
            where flowid=v_zp.Id_zprwhz;

            Update t_zprw  Set   SJSL = SJSL+v_bccs
             Where flowid_zp = v_zp.flowid_zp;

            --v_bj      := 4;
            v_one_sys := round(v_zp.zjxs * v_zp.zk * v_bccs / 100, 2);
            v_one_mys := v_dj * v_bccs;



            Update t_jhtask
               Set zpz = zpz + 1, zcs = zcs + v_bccs, zmy = zmy + v_one_mys,
                   zsy = zsy + v_one_sys,   rqh = v_rqh,
                   zzl = nvl(zzl, 0) + (v_zp.zl * v_bccs),
                   zb=nvl(zb,v_bz)
             Where id=v_bjlsh;
            If Sql%Notfound Then
                 errno   := -1;
                errtext := '更新出错！';
                 rollback;
                return;
            End If;

           select ALL_FLOWID.Nextval into  v_allflowid from dual;

            Insert Into t_crkls
                (flowid_crkls, id, ywpch, yspch, crkrq, ywlx, kfbh, lybh, cybh, ywbmbh,
                 crkcs, crksy, sylx, zk_jg, zjxs, bz, dbbz, xbbz, sl,
                 flowid_wl, pk)
            Values
                (v_allflowid, v_zp.id, v_bjlsh, v_bjlsh, Sysdate, 'FH', v_zp.kfbh,
                 v_zp.dh, v_zp.cybh, v_zp.ywbmbh, v_bccs, v_one_sys, v_zp.sylx, v_zp.zk,
                 v_zp.zjxs, 'RFBZ', v_zp.dbbz, v_zp.xbbz, v_zp.sl,
                 v_zp.flowid_zp, v_zp.pk);


           insert into t_tree
              (tbid, tbname, pid, pname, note, id, cs,czy )
              values
              (v_allflowid, 't_fhjh', v_zp.flowid_zp, 't_zprw',
              '播撒完成'||'校核任务号'||v_bjlsh||'箱号'||trim(v_rqh), v_zp.id,
               v_bccs ,v_czy);

         Insert Into t_fhjh
                (flowid, pxdh, bjlsh,  id, ywbmbh, kfbh, cybh, dh, pxcs, sylx, zjxs,
                 pxzk, sl, fhfs, thfs, djly, ZDH, DBBZ, XBBZ, sys, txy, cgyj, jzthrq, zl,
                 sdhrq, yscs, cgyj_kh,   pfrq, pk,ysczy,zddh,sourceid,sourcetable)
            Values
                (v_allflowid, v_bjlsh, v_bjlsh,   v_zp.id, v_zp.ywbmbh,
                 v_zp.kfbh, v_zp.cybh, v_zp.dh, v_bccs, v_zp.sylx, v_zp.zjxs, v_zp.zk,
                 v_zp.sl, '01', v_zp.tihfs, 'ZP', V_BJLSH, V_ZP.DBBZ, V_ZP.XBBZ, V_ONE_SYS,
                 null, v_zp.cgyj, d_jzthrq, v_zp.zl, v_zp.sdhrq, v_bccs, v_zp.cgyj_kh,
                    sysdate, v_zp.pk,v_czy,v_zp.zddh,v_zp.flowid_zp,'t_zprw');




             Insert Into t_agv_rw_xt_bak
              (flowid_xj, ph, id, lxbh, ln_zp, kfbh, ywbmbh, cybh, dh, phdh, xsdh,
               tihfs, xhao, qshqbh, hqbh, hwh, pxhw, zrhq, zrhw, yssl, sl, zk, sylx,
               zjxs, cltz, xjrq, xjczybh, wcbj, ysczybh, dbbz, xbbz, cwh, jxfs, djly,
               dbdh, zrcybh, sjsl, lhqhw, xdrq, zl, sdhrq, cgyj, xszq, qsclfs,
               cgyj_kh,  pk)
          Values
              (v_allflowid, Trim(v_bjlsh), v_zp.id, 'ZP', '', Trim(v_zp.kfbh),
               Trim(v_zp.ywbmbh), Trim(v_zp.cybh), Trim(v_zp.dh), Trim(v_bjlsh),
              Trim(v_bjlsh), '01', v_rqh, '901',
              '901', Trim(v_zp.ln_zp_hw), '', '', '', v_bccs
               /*v_zp.yssl*/, v_zp.sl, v_zp.zk, v_zp.sylx, v_zp.zjxs, 1, Sysdate,
               v_czy, '0', v_czy, v_zp.dbbz, v_zp.xbbz, '', 'AJ',
               v_zp.djly, Null, '', v_bccs, '', Sysdate, v_zp.zl, V_ZP.SDHRQ,
               V_ZP.CGYJ, V_ZP.XSZQ, '0', v_zp.cgyj_kh,   v_zp.pk);


     End If;

    

       Update t_kcsl
         Set KCCS = KCCS - v_bccs,
             ZYCS = ZYCS - v_bccs
       Where id = v_zp.id And ywbmbh = v_zp.ywbmbh And kfbh = v_zp.kfbh And
             cybh = v_zp.cybh;

        update MIDORDERS set STATE='4' where rowid=cur.rid;

        select count(*) into v_rows from MIDORDERS where
          ID_ZPRW=v_zp.flowid_zp and    state<>'4' ;
        
        if v_rows =0 then
          --处理差异
          
         select v_zp.yssl- sum(truequantity) into v_cys from MIDORDERS 
         where  cur.ID_ZPRW=v_zp.flowid_zp;
         If v_cys > 0   Then
           
             Update t_kcsl
             Set KCCS = KCCS - v_cys,
                 ZYCS = ZYCS - v_cys
             Where id = v_zp.id And ywbmbh = v_zp.ywbmbh And kfbh = v_zp.kfbh And
                 cybh = v_zp.cybh;
             
           select ALL_FLOWID.Nextval into  v_allflowid from dual;
           select min(trim(dm)) into v_dm from t_dm where dh=v_zp.zddh;

           insert into t_tree
              (tbid, tbname, pid, pname, note, id, cs,czy )
              values
              (v_allflowid, 't_wlccb', v_zp.flowid_zp, 't_zprw',
              '播撒差异,'||v_dm, v_zp.id,
               v_cys ,v_czy);

            insert into t_chacuo
            (id,  czy, czyname, cs, pczy, pczyname, pcs,   tbid, tbname,lx)
             select v_zp.ID ,v_czy,
             (select trim(name) from t_user where usr_id= v_czy),
             v_cys,v_czy,
             (select trim(name) from t_user where usr_id=v_czy),
             cur.quantity , v_allflowid,'t_wlccb','BS'  from dual ;

                 -- 2007-08-08 yangyi add: 写差错表
                Insert Into t_wlccb
                    (rq, lx, czybh_err, czybh_chk, id, flowid, ywbmbh)
                Values
                    (Sysdate, 'ZPBZ', v_czy, v_czy, v_zp.id,
                     v_allflowid, v_zp.ywbmbh);

                proc_cycl(v_zp.ywbmbh, v_zp.kfbh, v_zp.id, -v_cys, v_bjlsh,
                          'RFBZ', v_czy, v_zp.cgyj, v_zp.cybh, v_zp.dh, 'ZP',
                          v_zp.zk, errno, errtext);
                If errno <> 0 Then
                    Rollback;
                    Return;
                End If;
          end if ;



           insert into t_zprw_bak
          (flowid_zp, lxbh, id, kfbh, ywbmbh, cybh, dbbz, xbbz, tihfs, dh, zpxyrqh, yssl, zk,
          sylx, zjxs, ysczybh, ln_zp_no, ln_zp_hw, zpczybh, sourceid, ddbj, djly, bz, sl, yspch,
           zl, cgyj, xszq, sdhrq, mdrqh, bzrq, cgyj_kh, fhyxj, pk, xrrq, sourcetable,
           id_zprwhz, sjsl, zddh,jhzxid,id_wlsh)
           select   flowid_zp, lxbh, id, kfbh, ywbmbh, cybh, dbbz, xbbz, tihfs, dh, zpxyrqh, yssl, zk,
            sylx, zjxs, ysczybh, ln_zp_no, ln_zp_hw, zpczybh, sourceid, ddbj, djly, bz, sl, yspch,
             zl, cgyj, xszq, sdhrq,v_rqh, sysdate, cgyj_kh, fhyxj, pk, xrrq, sourcetable,
             id_zprwhz, sjsl, zddh,jhzxid,id_wlsh from
            t_zprw where flowid_zp=v_zp.flowid_zp;

            delete  t_zprw where flowid_zp=v_zp.flowid_zp;

            select count(*) into v_rows from T_ZPRW where  id_zprwhz = v_zp.id_zprwhz;
            if v_rows=0 then
                update t_zprwhz set finishdate=sysdate,finished=1,zt='2'
                where flowid=v_zp.Id_zprwhz;


                delete t_rqzy where tbname='t_zprwhz' and bh=v_ysrqh;

                insert into t_gzl2
               (czybh,    pz, js, id_job, proc, tablename, tablepk,YWBM)
               select v_czy,zpz,0,'ZPBZ','RF_RFBZ2','t_zprwhz',v_zp.Id_zprwhz,ywbmbh from
                t_zprwhz where flowid=v_zp.Id_zprwhz;

            end if;


        end if ;

    end loop;


    errno := 0;
    errtext :='ok';
Exception
    When Others Then
        errno   := v_bj;
        errtext := Sqlerrm ||v_bj;
        Rollback;
End;
